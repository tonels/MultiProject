<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tonels.mbdemo3.dao.CustomersMapper">
  <resultMap id="BaseResultMap" type="tonels.mbdemo3.entity.Customers">

    <id column="customerNumber" jdbcType="INTEGER" property="customernumber" />
    <result column="customerName" jdbcType="VARCHAR" property="customername" />
    <result column="contactLastName" jdbcType="VARCHAR" property="contactlastname" />
    <result column="contactFirstName" jdbcType="VARCHAR" property="contactfirstname" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="addressLine1" jdbcType="VARCHAR" property="addressline1" />
    <result column="addressLine2" jdbcType="VARCHAR" property="addressline2" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="postalCode" jdbcType="VARCHAR" property="postalcode" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="salesRepEmployeeNumber" jdbcType="INTEGER" property="salesrepemployeenumber" />
    <result column="creditLimit" jdbcType="DECIMAL" property="creditlimit" />
  </resultMap>

  <sql id="All_Column">
    customerNumber, customerName, contactLastName, contactFirstName, phone, addressLine1,
    addressLine2, city, state, postalCode, country, salesRepEmployeeNumber, creditLimit
  </sql>
  <sql id="Vo1_Column">
    customerNumber, customerName, contactLastName, contactFirstName,city
  </sql>
  <sql id="Vo2_Column">
      customerNumber,customerName,paymentDate,amount
  </sql>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Vo1_Column" />
        from customers cu where cu.customerNumber = #{customernumber,jdbcType=INTEGER}
    </select>

  <select id="selectByCity" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Vo1_Column" />
    from customers cu where cu.city = #{city,jdbcType=VARCHAR}
  </select>

    <select id="selectByCityAndContactfirstname"  resultMap="BaseResultMap">
        select
          <include refid="Vo1_Column" />
        from customers cu where cu.city = #{city,jdbcType=VARCHAR} and cu.contactFirstName = #{contactfirstname,jdbcType=VARCHAR}
    </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select
      <include refid="All_Column" />
    from customers
  </select>

  <select id="selectVo1" resultMap="BaseResultMap">
    select
    <include refid="Vo1_Column" />
    from customers
  </select>

  <select id="selectVo2" resultMap="BaseResultMap">
    SELECT
    cu.customerNumber,
    cu.customerName,
    pa.paymentDate,
    pa.amount
    FROM
    customers cu
    LEFT JOIN payments pa ON cu.customerNumber = pa.customerNumber

  <where>
  <if test="customernumber != null and customernumber != ''">
  AND cu.customerNumber = #{customernumber,jdbcType=INTEGER}
  </if>
  <if test="customername != null and customername != ''">
  AND cu.customerName like  "%"#{customername,jdbcType=VARCHAR}"%"
  </if>
  <if test="amount != null and amount != ''">
  AND pa.amount > #{amount,jdbcType=DECIMAL}
  </if>
  </where>
  </select>


  <!--插入sql-->
  <insert id="insert" parameterType="tonels.mbdemo3.entity.Customers">

    insert into customers (
        customerNumber,
        customerName,
        contactLastName,
        contactFirstName,
        phone,
        addressLine1,
        addressLine2,
        city,
        state,
        postalCode,
        country,
        salesRepEmployeeNumber,
        creditLimit)
    values (
        #{customernumber,jdbcType=INTEGER},
        #{customername,jdbcType=VARCHAR},
        #{contactlastname,jdbcType=VARCHAR},
        #{contactfirstname,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR},
        #{addressline1,jdbcType=VARCHAR},
        #{addressline2,jdbcType=VARCHAR},
        #{city,jdbcType=VARCHAR},
        #{state,jdbcType=VARCHAR},
        #{postalcode,jdbcType=VARCHAR},
        #{country,jdbcType=VARCHAR},
        #{salesrepemployeenumber,jdbcType=INTEGER},
        #{creditlimit,jdbcType=DECIMAL}
      )
  </insert>
  <update id="updateByPriKey" parameterType="tonels.mbdemo3.entity.Customers">
    update customers
    set
      customerName = #{customername,jdbcType =VARCHAR },
      contactLastName = #{contactlastname,jdbcType = VARCHAR},
      contactFirstName = #{contactfirstname,jdbcType = VARCHAR},
      phone = #{phone,jdbcType = VARCHAR},
      addressLine1 = #{addressline1,jdbcType = VARCHAR},
      addressLine2 = #{addressline2,jdbcType = VARCHAR},
      city = #{city,jdbcType = VARCHAR},
      state = #{state,jdbcType = VARCHAR},
      postalCode = #{postalcode,jdbcType = VARCHAR},
      country = #{country,jdbcType = VARCHAR},
      salesRepEmployeeNumber = #{salesrepemployeenumber,jdbcType = INTEGER},
      creditLimit = #{creditlimit,jdbcType = DECIMAL}
    where customers.customerNumber = #{customernumber,jdbcType=INTEGER}
  </update>

  <delete id="deleteByPriKey" parameterType="java.util.List">
    delete from customers where customerNumber in
     <foreach collection="ids"  item="item" open="(" separator="," close=")" >
          #{item}
     </foreach>
  </delete>





</mapper>